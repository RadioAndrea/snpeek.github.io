const fs = require('fs');

const header = `
# This data file generated by 23andMe at: Fri May 19 20:11:45 2023
#
# This file contains raw genotype data, including data that is not used in 23andMe reports.
# This data has undergone a general quality review however only a subset of markers have been 
# individually validated for accuracy. As such, this data is suitable only for research, 
# educational, and informational use and not for medical or other use.
# 
# Below is a text version of your data.  Fields are TAB-separated
# Each line corresponds to a single SNP.  For each SNP, we provide its identifier 
# (an rsid or an internal id), its location on the reference human genome, and the 
# genotype call oriented with respect to the plus strand on the human reference sequence.
# We are using reference human assembly build 37 (also known as Annotation Release 104).
# Note that it is possible that data downloaded at different times may be different due to ongoing 
# improvements in our ability to call genotypes. More information about these changes can be found at:
# https://you.23andme.com/p/73cfdb908fc1e47e/tools/data/download/
# 
# More information on reference human assembly builds:
# https://www.ncbi.nlm.nih.gov/assembly/GCF_000001405.13/
#
# rsid\tchromosome\tposition\tgenotype
`;

function main() {
    let outputData = header.trim();

    for(let i = 1; i <= 1000; i++) {
        const rsid = `rs${i}`;
        const chromosome = randomItem([...Array(22).keys()].map(i => i + 1).concat(['X', 'Y', 'MT']));
        const position = Math.floor(Math.random() * 90000) + 10000;

        const genotypeChoices = [randBasePair, hyphen, doubleI, singleLetter];
        const genotype = randomItem(genotypeChoices)();

        outputData += `\n${rsid}\t${chromosome}\t${position}\t${genotype}`;
    }

    outputData += `\nrs9652490\t3\t234\tAA`;
    outputData += `\nrs6812193\t4\t572\tCC`;
    outputData += `\nrs5219\t7\t342\tTT`;
    outputData += `\nrs2943634\t8\t234\tC`;

    const filename = 'testdata_23andme.txt'
    console.log(`Generated mock data at: ${filename}`)
    fs.writeFileSync(filename, outputData);
}

function randomItem(items) {
    return items[Math.floor(Math.random() * items.length)];
}

function randBasePair() {
    const basePairs = ['A', 'T', 'G', 'C'];
    return randomItem(basePairs) + randomItem(basePairs);
}

function hyphen() {
    return '--';
}

function doubleI() {
    return 'II';
}

function singleLetter() {
    return randomItem(['A', 'T', 'G', 'C', 'I']);
}

main();
